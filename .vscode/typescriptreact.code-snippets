{
  //#region  //*=========== React ===========
  "React useState": {
    "prefix": "us",
    "body": [
      "const [${1}, set${1/(^[a-zA-Z])(.*)/${1:/upcase}${2}/}] = useState<$3>(${2:initial${1/(^[a-zA-Z])(.*)/${1:/upcase}${2}/}})$0"
    ]
  },
  "React useEffect": {
    "prefix": "uf",
    "body": ["useEffect(() => {", "  $0", "}, []);"]
  },
  "React useReducer": {
    "prefix": "ur",
    "body": [
      "const [state, dispatch] = useReducer(${0:someReducer}, {",
      "  ",
      "})"
    ]
  },
  "React useRef": {
    "prefix": "urf",
    "body": ["const ${1:someRef} = useRef($0)"]
  },
  "React Functional Component": {
    "prefix": "rc",
    "body": [
      "export const ${1:${TM_FILENAME_BASE}} = () => {",
      "  return (",
      "    <div>",
      "      $0",
      "    </div>",
      "  )",
      "}"
    ]
  },
  //#endregion  //*======== React ===========

  //#region  //*=========== Commons ===========
  "Region": {
    "prefix": "reg",
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "body": [
      "//#region  //*=========== ${1} ===========",
      "${TM_SELECTED_TEXT}$0",
      "//#endregion  //*======== ${1} ==========="
    ]
  },
  "Region CSS": {
    "prefix": "regc",
    "scope": "css, scss",
    "body": [
      "/* #region  /**=========== ${1} =========== */",
      "${TM_SELECTED_TEXT}$0",
      "/* #endregion  /**======== ${1} =========== */"
    ]
  },
  //#endregion  //*======== Commons ===========

  //#region  //*=========== Snippet Wrap ===========
  "Wrap with Fragment": {
    "prefix": "ff",
    "body": ["<>", "\t${TM_SELECTED_TEXT}", "</>"]
  },
  "Wrap with clsx": {
    "prefix": "cx",
    "body": ["{clsx([${TM_SELECTED_TEXT}$0])}"]
  },
  "Wrap with clsxm": {
    "prefix": "cxm",
    "body": ["{clsxm([${TM_SELECTED_TEXT}$0, className])}"]
  },
  //#endregion  //*======== Snippet Wrap ===========

  "Logger": {
    "prefix": "lg",
    "body": [
      "logger({ ${1:${CLIPBOARD}} }, '${TM_FILENAME} line ${TM_LINE_NUMBER}')"
    ]
  }
}
